version: '2.1'
services:
  mongodb:
    container_name: mongodb
    image: mongo:5.0.27-focal
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  rabbitmq:
    container_name: rabbitmq
    image: lfeoperatorfabric/of-rabbitmq:4.4.0.RELEASE
  keycloak:
    container_name: keycloak
    image: keycloak/keycloak:25.0
    command:
      - -v
      - start-dev 
      - --import-realm
    environment:
      - KC_HTTP_PORT=89
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HTTP_RELATIVE_PATH=/auth
    volumes:
    - ./realms/export:/opt/keycloak/data/import
    ports:
    - "89:89"
  users:
    container_name: users
    image: "lfeoperatorfabric/of-users-service:4.4.0.RELEASE"
    depends_on:
      - mongodb
      - rabbitmq
    user: ${USER_ID}:${USER_GID}
    ports:
     - "2103:2103"
    volumes:
      - "./docker-configurations/users.yml:/config/application.yml"
      - "./docker-configurations/common.yml:/config/common.yml"
  businessconfig:
    container_name: businessconfig
    image: "lfeoperatorfabric/of-businessconfig-service:4.4.0.RELEASE"
    depends_on:
      - mongodb
    user: ${USER_ID}:${USER_GID}
    ports:
     - "2100:2100"
    volumes:
      - "./businessconfig-storage:/businessconfig-storage"
      - "./docker-configurations/common.yml:/config/common.yml"
      - "./docker-configurations/businessconfig.yml:/config/application.yml"
  cards-publication:
    container_name: cards-publication
    image: "lfeoperatorfabric/of-cards-publication-service:4.4.0.RELEASE"
    depends_on:
      - mongodb
      - rabbitmq
    user: ${USER_ID}:${USER_GID}
    ports:
     - "2102:2102"
    volumes:
      - "./docker-configurations/common.yml:/config/common.yml"
      - "./docker-configurations/cards-publication.yml:/config/application.yml"
  cards-consultation:
    container_name: cards-consultation
    image: "lfeoperatorfabric/of-cards-consultation-service:4.4.0.RELEASE"
    depends_on:
      - mongodb
      - rabbitmq
    user: ${USER_ID}:${USER_GID}
    ports:
     - "2104:2104"
    volumes:
      - "./docker-configurations/common.yml:/config/common.yml"
      - "./docker-configurations/cards-consultation.yml:/config/application.yml"
  web-ui:
    container_name: web-ui
    image: "lfeoperatorfabric/of-web-ui:4.4.0.RELEASE"
    ports:
    - "2002:80"
    depends_on:
      - users
      - businessconfig
      - cards-consultation
    volumes:
      - "./web-ui.json:/usr/share/nginx/html/config/web-ui.json"
      - "./ui-menu.json:/usr/share/nginx/html/config/ui-menu.json"
      - "./html/grafana.html:/usr/share/nginx/html/grafana.html"
      - "./html/mappingAdministration:/usr/share/nginx/html/mappingAdministration"
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
  cards-reminder:
    container_name: cards-reminder
    image: "lfeoperatorfabric/of-cards-reminder:4.4.0.RELEASE"
    depends_on:
      - cards-publication
      - users
    user: ${USER_ID}:${USER_GID}
    ports:
      - "2107:2107"
    environment:
      - TZ=Europe/Paris
      - NODE_ENV=base,common,docker
    volumes:
      - "./docker-configurations/cards-reminder.yml:/usr/app/config/docker.yml"
      - "./docker-configurations/common.yml:/usr/app/config/common.yml"
  prometheus:
    image: prom/prometheus:v2.53.4
    ports:
      - '9090:9090'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./grafana-provisioning/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
  grafana:
    image: grafana/grafana:11.5.3
    ports:
      - '3000:3000'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
#      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
#      - GF_LOG_FILTERS=rendering:debug
    volumes:
       - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
       - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
       - ./grafana-provisioning/alerting:/etc/grafana/provisioning/alerting
    depends_on:
      - prometheus
#  renderer:
#    image: grafana/grafana-image-renderer:latest
#    ports:
#      - 8081:8081
